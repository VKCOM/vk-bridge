name: 'Publish pre-relase'

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: "package's name:"
        type: choice
        options:
          - '@vkontakte/vk-bridge'
          - '@vkontakte/vk-bridge-react'
        required: true
      new_version:
        description: 'version type (use prerelease for bumping pre-release version):'
        required: true
        type: choice
        default: 'prerelease'
        options:
          - prepatch
          - preminor
          - premajor
          - prerelease
      npm_tag_aka_pre_id:
        required: true
        description: 'NPM tag:'
        type: choice
        default: 'beta'
        options:
          - alpha
          - beta
          - rc
      custom_version:
        description: 'use syntax x.y.z-beta.0, without "v" (it ignore "version type" parameter):'
        required: false

run-name: Publish pre-release ${{ github.event.inputs.package_name }} ${{ inputs.new_version }} ${{ inputs.custom_version }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DEVTOOLS_GITHUB_TOKEN }}

      - name: Setting up the repository environment
        uses: ./.github/actions/publish-workflow-1-setup

      - name: Bump version
        id: updated_versions_info
        uses: ./.github/actions/publish-workflow-2-bump-version
        with:
          package_name: ${{ github.event.inputs.package_name }}
          new_version: ${{ github.event.inputs.custom_version || github.event.inputs.new_version }}
          # Ignore `pre_id` if `custom_version` is specified
          pre_id: ${{ !github.event.inputs.custom_version && github.event.inputs.npm_tag_aka_pre_id || '' }}

      - name: Run pre-publish checks
        uses: ./.github/actions/publish-workflow-3-validation

      - name: Complete publish
        uses: ./.github/actions/publish-workflow-4-complete
        with:
          branch: ${{ github.ref }}
          prev_version: ${{ steps.updated_versions_info.outputs.prev_version }}
          next_version: ${{ steps.updated_versions_info.outputs.next_version }}
          package_name: ${{ github.event.inputs.package_name }}
          token: ${{ secrets.DEVTOOLS_GITHUB_TOKEN }}
          npm_token: ${{ secrets.NPMJS_PUBLISH_TOKEN }}
          npm_tag: ${{ github.event.inputs.npm_tag_aka_pre_id }}
